{
  "name": "cinephoria",
  "version": "0.0.0",
  "scripts": {
    "ng": "ng",
    "start": "ng serve",
    "build": "ng build",
    "watch": "ng build --watch --configuration development",
    "lint": "eslint . --ext .ts,.html",
    "lint:fix": "eslint . --ext .ts,.html --fix",
    "format": "prettier --write \"**/*.{ts,html,scss}\"",
    "docker:db": "npm run docker:db --prefix backend",
    "docker:db:down": "npm run docker:db:down --prefix backend",
    "docker:test": "docker compose -f docker-compose-test.yml up --build -d",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:unit": "jest tests/unit",
    "test:functional": "jest tests/functional",
    "test:integration": "jest tests/integration",
    "test:frontend:all": "npm run test:unit && npm run test:functional && npm run test:integration",
    "test:unit:bk": "npm run test:unit:bk --prefix backend",
    "test:unit:bk:docker": "jest --config backend/tests/jest.config.ts --detectOpenHandles --testPathPattern=backend/tests/unit",
    "test:functional:bk": "npm run test:functional:bk --prefix backend",
    "test:functional:bk:docker": "jest --config backend/tests/jest.config.ts --detectOpenHandles --testPathPattern=backend/tests/functional",
    "test:integration:bk": "npm run test:integration:bk --prefix backend",
    "test:integration:bk:docker": "jest --config backend/tests/jest.config.ts --detectOpenHandles --testPathPattern=backend/tests/integration",
    "test:backend:all": "npm run test:unit:bk && npm run test:functional:bk && npm run test:integration:bk",
    "test:unit:all": "npm run test:unit && npm run test:unit:bk",
    "test:unit:all:docker": "npm run test:unit && npm run test:unit:bk:docker",
    "test:functional:all": "npm run test:functional && npm run test:functional:bk",
    "test:functional:all:docker": "npm run test:functional && npm run test:functional:bk:docker",
    "test:integration:all": "npm run test:integration && npm run test:integration:bk",
    "test:integration:all:docker": "npm run test:integration && npm run test:integration:bk:docker",
    "test:all": "npm run test:frontend:all && npm run test:backend:all",
    "test:cov": "jest --coverage --detectOpenHandles",
    "test:cov:bk": "npm run test:cov:bk --prefix backend",
    "test:cov:all": "npm run test:cov && npm run test:cov:bk",
    "test:e2e:open": "cypress open --config-file tests/cypress/cypress.config.ts",
    "test:e2e:run:headless": "cypress run --config-file tests/cypress/cypress.config.ts --headless --browser chromium",
    "test:e2e:run:ci": "cypress run --config-file tests/cypress/cypress.config.ts --headless --browser chromium",
    "docker:test:down": "docker compose -f docker-compose-test.yml down -v",
    "cy:open": "cypress open --config-file tests/cypress/cypress.config.ts",
    "cy:run": "cypress run --config-file tests/cypress/cypress.config.ts --headed --browser chrome",
    "cy:run:headless": "cypress run --config-file tests/cypress/cypress.config.ts --headless --browser chrome",
    "frontend": "ng serve cinephoria-web",
    "build:frontend": "ng build cinephoria-web",
    "backend": "npm run dev --prefix backend",
    "start:backend": "node backend/dist/server.js",
    "build:backend": "npm run build --prefix backend",
    "build:web": "npm run build:frontend && npm run build:backend",
    "dev": "cross-env NODE_ENV=development concurrently \"npm run frontend\" \"npm run docker:backend\"",
    "backend:seed:staff": "npm run seeder:add:staff --prefix backend",
    "backend:seeder": "npm run seeder:add:users --prefix backend",
    "backend:seeder:remove": "npm run seeder:remove:users --prefix backend",
    "docker:frontend": "ng serve cinephoria-web --configuration=development",
    "docker:backend": "npm run build --prefix backend && npm run start --prefix backend && npm run dev --prefix backend",
    "dev:test": "cross-env NODE_ENV=development concurrently \"npm run docker:backend\" \"npm run docker:frontend\"",
    "prod": "cross-env NODE_ENV=production concurrently \"npm run frontend:prod\" \"npm run backend:prod\"",
    "frontend:prod": "ng build cinephoria-web --configuration=production && ng serve cinephoria-web",
    "backend:prod": "npm run docker:build:prod --prefix backend",
    "docker:stage": "docker compose -f docker-compose-staging.yml up --build",
    "docker:stage:down": "docker compose -f docker-compose-staging.yml down -v",
    "docker:run": "docker compose -f docker-compose.yml up --build -d",
    "docker:stop": "docker compose -f docker-compose.yml down"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "^18.2.0",
    "@angular/cdk": "^18.2.14",
    "@angular/common": "^18.2.0",
    "@angular/compiler": "^18.2.0",
    "@angular/core": "^18.2.0",
    "@angular/forms": "^18.2.0",
    "@angular/material": "^18.2.14",
    "@angular/platform-browser": "^18.2.0",
    "@angular/platform-browser-dynamic": "^18.2.0",
    "@angular/router": "^18.2.0",
    "rxjs": "~7.8.0",
    "tslib": "^2.3.0",
    "zone.js": "~0.14.10"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "^18.2.19",
    "@angular-eslint/eslint-plugin": "^19.6.0",
    "@angular-eslint/eslint-plugin-template": "^19.6.0",
    "@angular-eslint/schematics": "^19.6.0",
    "@angular-eslint/template-parser": "^19.6.0",
    "@angular/cli": "18.2.16",
    "@angular/compiler-cli": "18.2.13",
    "@eslint/eslintrc": "^3.3.1",
    "@eslint/js": "^9.27.0",
    "@testing-library/angular": "^17.4.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@types/dotenv": "^6.1.1",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.15.23",
    "@types/nodemailer": "^6.4.17",
    "@typescript-eslint/eslint-plugin": "^8.33.0",
    "@typescript-eslint/parser": "^8.33.0",
    "concurrently": "^9.1.2",
    "cross-env": "^7.0.3",
    "cypress": "^14.4.0",
    "dotenv": "^16.5.0",
    "eslint": "^9.27.0",
    "eslint-config-prettier": "^10.1.5",
    "eslint-plugin-prettier": "^5.4.0",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-preset-angular": "^14.5.5",
    "ng-packagr": "^18.2.0",
    "nodemailer": "^7.0.3",
    "prettier": "^3.5.3",
    "start-server-and-test": "^2.0.12",
    "ts-jest": "^29.3.4",
    "typescript": "~5.5.2"
  },
  "jest": {
    "preset": "jest-preset-angular",
    "transform": {
      "transform_regex": [
        "ts-jest",
        {
          "^.+\\.(ts|js|html)$": "ts-jest",
          "stringifyContentPathRegex": "\\.html$",
          "tsconfig": "<rootDir>/tsconfig.spec.json",
          "useESM": true
        }
      ]
    },
    "moduleFileExtensions": [
      "ts",
      "js",
      "json",
      "html"
    ],
    "roots": [
      "<rootDir>/tests/unit",
      "<rootDir>/tests/functional",
      "<rootDir>/tests/integration"
    ],
    "setupFilesAfterEnv": [
      "<rootDir>/tests/setup.jest.ts"
    ],
    "testPathIgnorePatterns": [
      "<rootDir>/node_modules/",
      "<rootDir>/dist/",
      "<rootDir>/backend/node_modules/",
      "<rootDir>/backend/dist/"
    ],
    "verbose": true,
    "detectLeaks": false,
    "detectOpenHandles": true,
    "forceExit": false
  }
}
